---
import PageLayout from '../layouts/PageLayout.astro';
import Intro from '../components/Intro.astro';
import { getMeetups } from '../get-meetups';

const meetups = await getMeetups();
---

<script>
  // Function to render the next meetup
  function renderNextMeetup() {
    // We need to dynamically import both utils and the client component
    Promise.all([import('../utils'), import('../components/MeetupCardClient')])
      .then(([{ getNextMeetup }, { renderMeetupCard }]) => {
        // Get meetups data passed from the server
        const meetupsData = document.getElementById('meetups-data');

        let meetups = [];
        if (meetupsData) {
          try {
            meetups = JSON.parse(meetupsData.textContent || '');
            
            // Debug: Log all meetups and their dates
            console.log('All meetups:', meetups.map(m => ({
              title: m.title,
              date: new Date(m.date),
              timestamp: +new Date(m.date)
            })));
            
            // Current date for comparison
            const currentDate = new Date();
            console.log('Current date:', currentDate, 'timestamp:', +currentDate);
            
            // Filter future meetups manually to debug
            const futureMeetups = meetups.filter(m => {
              const meetupDate = new Date(m.date);
              const isFuture = +meetupDate >= +currentDate;
              console.log(`Meetup: ${m.title}, Date: ${meetupDate}, Is Future: ${isFuture}`);
              return isFuture;
            });
            
            console.log('Future meetups:', futureMeetups.map(m => m.title));
            
            // Sort future meetups manually to debug
            const sortedFutureMeetups = [...futureMeetups].sort((a, b) => {
              const dateA = +new Date(a.date);
              const dateB = +new Date(b.date);
              console.log(`Comparing: ${a.title} (${dateA}) vs ${b.title} (${dateB}) = ${dateA - dateB}`);
              return dateA - dateB;
            });
            
            console.log('Sorted future meetups:', sortedFutureMeetups.map(m => m.title));
          } catch (e) {
            console.error('Error parsing meetups data:', e);
          }
        }

        // Dynamically determine the next meetup using current date/time
        const nextMeetup = getNextMeetup(meetups);
        console.log('Selected next meetup:', nextMeetup?.title);

        // Render the next meetup card if one exists
        const nextMeetupContainer = document.getElementById(
          'next-meetup-container',
        );

        if (nextMeetup && nextMeetupContainer) {
          renderMeetupCard(nextMeetup, nextMeetupContainer);
        } else if (nextMeetupContainer) {
          nextMeetupContainer.innerHTML =
            '<div class="text-center p-4">No upcoming meetups scheduled.</div>';
        }
      })
      .catch((error) => {
        console.error('Error:', error);
      });
  }

  // Run on initial page load
  renderNextMeetup();

  // Also run when navigating back to this page via client-side routing
  document.addEventListener('astro:page-load', () => {
    renderNextMeetup();
  });
</script>

<PageLayout>
  <div class="mx-auto flex max-w-7xl flex-col sm:px-6 lg:px-8">
    <div class="container">
      <div class="mx-auto max-w-7xl sm:px-6 lg:px-8">
        <div class="relative shadow-xl sm:rounded-2xl">
          <div class="">
            <img
              class="sm:rounded-2xl"
              width={1200}
              height={600}
              src={`${import.meta.env.BASE_URL}images/oulu-devmeetups-hero.jpg`}
              alt="artistic picture of Oulu castle"
            />
          </div>
        </div>
      </div>
    </div>
    <div class="m-4 text-center">
      <Intro />
    </div>
    <div class="m-4 text-center text-2xl">
      <h2>What is coming next?</h2>
    </div>
    <div id="next-meetup-container"></div>

    <!-- Hidden data element to pass meetups to client-side JavaScript -->
    <script
      id="meetups-data"
      type="application/json"
      set:html={JSON.stringify(meetups)}
    />
  </div>
</PageLayout>
